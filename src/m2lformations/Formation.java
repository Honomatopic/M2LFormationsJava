/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package m2lformations;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Honoré
 */
public class Formation extends javax.swing.JFrame {

    BDD bdd = new BDD();
    Connection connexion;
    PreparedStatement reqPreparee;
    ResultSet resultat;

    /**
     * Creates new form Formation2
     */
    public Formation() {
        initComponents();
        ImageIcon icone = new ImageIcon("C:\\netbeans-workspace\\m2lformations\\resources\\images\\m2l.png");
        this.setIconImage(icone.getImage());
        try {
            connexion = bdd.gestionnaireDeConnexion();
            reqPreparee = connexion.prepareStatement("SELECT * FROM formation");
            resultat = reqPreparee.executeQuery();
            table.setModel(BDD.construireTable(resultat));
        } catch (SQLException ex) {
            Logger.getLogger(Formation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitreFormations = new javax.swing.JLabel();
        labelId = new javax.swing.JLabel();
        labellFormations = new javax.swing.JLabel();
        texteFormations = new javax.swing.JTextField();
        boutonCreer = new javax.swing.JButton();
        boutonSupprimer = new javax.swing.JButton();
        boutonModifier = new javax.swing.JButton();
        ScrollPaneFormation = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("M2L Formations");

        labelTitreFormations.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTitreFormations.setText("Les formations de l'association");

        labelId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        labellFormations.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labellFormations.setText("L'intitulé : ");

        texteFormations.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        boutonCreer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        boutonCreer.setText("Créer");
        boutonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCreerActionPerformed(evt);
            }
        });

        boutonSupprimer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        boutonSupprimer.setText("Supprimer");
        boutonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSupprimerActionPerformed(evt);
            }
        });

        boutonModifier.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        boutonModifier.setText("Modifier");
        boutonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonModifierActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        ScrollPaneFormation.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labellFormations, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(texteFormations, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boutonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(boutonSupprimer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(boutonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelTitreFormations, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(212, 212, 212))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ScrollPaneFormation, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelTitreFormations)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelId)
                    .addComponent(labellFormations)
                    .addComponent(texteFormations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boutonCreer)
                    .addComponent(boutonSupprimer)
                    .addComponent(boutonModifier))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollPaneFormation, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCreerActionPerformed
        // TODO add your handling code here:
        try {
            connexion = bdd.gestionnaireDeConnexion();
            reqPreparee = connexion.prepareStatement("INSERT INTO formation (intitule) VALUES ('"
                    + texteFormations.getText() + "')");
            int resultatinsert = reqPreparee.executeUpdate();
            if (resultatinsert != 0) {
                JOptionPane.showMessageDialog(boutonCreer, "La formation a été créée", "Evènement crée",
                        JOptionPane.INFORMATION_MESSAGE);
                table.removeAll();
                reqPreparee = connexion.prepareStatement("SELECT * FROM formation");
                resultat = reqPreparee.executeQuery();
                table.setModel(BDD.construireTable(resultat));
            } else {
                JOptionPane.showMessageDialog(boutonCreer, "La formation n'a pas été créée", "Evènement non crée",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Formation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_boutonCreerActionPerformed

    private void boutonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSupprimerActionPerformed
        // TODO add your handling code here:
        try {
            connexion = bdd.gestionnaireDeConnexion();
            reqPreparee = connexion.prepareStatement("DELETE FROM formation WHERE id='" + labelId.getText() + "'");
            int resultatsuppr = reqPreparee.executeUpdate();
            if (resultatsuppr != 0) {
                JOptionPane.showMessageDialog(boutonSupprimer, "La formation a été supprimée", "Evènement supprimé",
                        JOptionPane.INFORMATION_MESSAGE);
                table.removeAll();
                reqPreparee = connexion.prepareStatement("SELECT * FROM formation");
                resultat = reqPreparee.executeQuery();
                table.setModel(BDD.construireTable(resultat));
            } else {
                JOptionPane.showMessageDialog(boutonSupprimer, "La formation n'a pas été supprimée", "Evènement non supprimé",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Formation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_boutonSupprimerActionPerformed

    private void boutonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonModifierActionPerformed
        // TODO add your handling code here:
        try {
            connexion = bdd.gestionnaireDeConnexion();
            reqPreparee = connexion.prepareStatement("UPDATE formation SET intitule='" + texteFormations.getText() + "' WHERE id='" + labelId.getText() + "'");
            int resultatedite = reqPreparee.executeUpdate();
            if (resultatedite != 0) {
                JOptionPane.showMessageDialog(boutonModifier, "La formation a été modifiée", "Evénement modifié",
                        JOptionPane.INFORMATION_MESSAGE);
                table.removeAll();
                reqPreparee = connexion.prepareStatement("SELECT * FROM formation");
                resultat = reqPreparee.executeQuery();
                table.setModel(BDD.construireTable(resultat));
            } else {
                JOptionPane.showMessageDialog(boutonModifier, "La formation n'a pas été modifiée", "Evènement non modifié",
                        JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Formation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_boutonModifierActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int ligne = table.getSelectedRow();
        labelId.setText(table.getValueAt(ligne, 0).toString());
        texteFormations.setText(table.getValueAt(ligne, 1).toString());
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Formation formation = new Formation();
                formation.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneFormation;
    private javax.swing.JButton boutonCreer;
    private javax.swing.JButton boutonModifier;
    private javax.swing.JButton boutonSupprimer;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelTitreFormations;
    private javax.swing.JLabel labellFormations;
    private javax.swing.JTable table;
    private javax.swing.JTextField texteFormations;
    // End of variables declaration//GEN-END:variables
}
